import requests
import schedule
import time
from twilio.rest import Client  


def celsius_to_fahrenheit(celsius):
    return (celsius * 9/5) + 32  # Fixed the formula and the missing parentheses

# Define the function to send a text message
def send_text_message(body):
    account_sid = "twilio_sid"
    auth_token = "twilio_token"
    from_phone_number = "from_phone_number"
    to_phone_number = "to_phone_number"

    
    client = Client(account_sid, auth_token)

    message = client.messages.create(
        body=body,
        from_=from_phone_number,
        to=to_phone_number
    )
    print("Text message sent!")

# Define the function to get weather data
def get_weather(latitude, longitude, api_key):
    base_url = "https://api.openweathermap.org/data/2.5/weather"
    params = {
        "lat": latitude,
        "lon": longitude,
        "appid": api_key
    }
    response = requests.get(base_url, params=params)
    data = response.json()
    return data

# Define the function to send a weather update
def send_weather_update():
    latitude = 40.4814
    longitude = 74.041
    api_key = "your_api_key"  # Replace with your actual OpenWeatherMap API key

    weather_data = get_weather(latitude, longitude, api_key)
    temperature_kelvin = weather_data["main"]["temp"]
    temperature_celsius = temperature_kelvin - 273.15  # Convert from Kelvin to Celsius
    relative_humidity = weather_data["main"]["humidity"]
    wind_speed = weather_data.get("wind", {}).get("speed", 0)

    temperature_fahrenheit = celsius_to_fahrenheit(temperature_celsius)

    weather_info = (
        f"Good morning!\n"
        f"Current Weather in New Jersey:\n"
        f"Temperature: {temperature_fahrenheit:.2f}F\n"
        f"Relative Humidity: {relative_humidity}%\n"
        f"Wind Speed: {wind_speed} m/s"
    )

    send_text_message(weather_info)

# Define the main function
def main():
    schedule.every().day.at("08:00").do(send_weather_update)
    while True:
        schedule.run_pending()
        time.sleep(1)

if __name__ == "__main__":
    main()
